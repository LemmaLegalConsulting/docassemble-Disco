---
include:
  - docassemble.AssemblyLine:assembly_line.yml
---
objects:
  - dataloader: DataLoader.using(filename="disco_blurbs.xlsx")
  - ncr: NCRDict.using(object_type=DAObject, there_are_any = True)
---
modules:
  - .load_data
---
mandatory: True
id: interview order
code: |
  methods
  ncr.gather()

  download
---
code: |
  ncr[i].category
  ncr[i].complete = True
---
id: discovery methods
question: |
  What discovery method(s) did you propound?
fields:
  - no label: methods
    datatype: checkboxes
    code: |
      unique_values(dataloader, search_column="Method")
    none of the above: False
---
#id: any noncompliant responses
#question: |
#  You said you propounded: ${ methods.true_values() }. 
#  
#  Did the responding party serve noncompliant responses?
#fields:
#  - no label: ncr.there_are_any
#    datatype: yesnoradio
---
id: Goodbye
event: goodbye
question: |
  Goodbye
---
id: add noncompliant response
question: |
  Add another noncompliant response?
yesno: ncr.there_is_another 
---
id: pets names
question: |
  Noncompliant response number
fields: 
  - no label: ncr.new_item_name
    choices: 
      - 1
      - 2 
      - 3 
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
---
id: explain noncompliant responses
question: |
  How was Response ${ i } noncompliant?
fields:
  - no label: ncr[i].category
    datatype: checkboxes
    code: |
      rows_with_label(dataloader, display_column="Category", filter_column="Method", filter_value=methods)
    none of the above: False
  - no label: ncr[i].label
    datatype: checkboxes
    code: |
      rows_with_label(dataloader, display_column="Label", filter_column="Method", filter_value=methods, filter_column2="Category", filter_value2=ncr[i].category)
    none of the above: False
---
#id: characteristics
#question: |
#  What characteristics does ${ i } have?
#fields:
#  - no label: pet[i].label_ids
#    datatype: checkboxes
#    code: |
#      rows_with_label(dataloader, display_column="Label", filter_column="Species", filter_value=pet[i].species, filter_column2="Breed", filter_value2=pet[i].breed)
#    none of the above: False
#---
#code: |
#  pet[i].selected_labels_df = dataloader.load_rows(
#    int(val)
#    for val in pet[i].label_ids.true_values()
#  )
---
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[disco_attachment], filename="disco.docx", title="All forms to download for your records", enabled=True)
---
objects:
  - disco_attachment: ALDocument.using(enabled=True, title="Disco", filename="Disco")
---
attachments:
  - name: Disco
    filename: disco.docx     
    variable name: disco_attachment[i]        
    skip undefined: True
    docx template file: disco.docx
---
id: download
event: download
question: |
  Your form is ready to download.
subquestion: |
  Thank you. Your form is ready to download.
  
  ${ al_user_bundle.download_list_html(format="docx") }

  ${ al_user_bundle.send_button_html(show_editable_checkbox=False) }

progress: 100